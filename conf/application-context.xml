<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	       
	<bean id="actionLookup" class="com.guanhuodata.framework.core.DefaultActionLookup"></bean>
	<bean id="serviceLocator" class="com.guanhuodata.framework.core.ServiceLocator"></bean>
	<bean id="licenseService" class="com.guanhuodata.license.license.LicenseServiceImpl"/>
	<bean id="loginInfo" class="com.guanhuodata.web.action.LoginInfoAction"></bean>
	<bean id="logout" class="com.guanhuodata.web.action.LogoutAction"></bean>
	<bean name="image" class="com.guanhuodata.web.action.ImageAction" ></bean>
	<bean name="forwardAction" class="com.guanhuodata.web.action.ForwardAction" ></bean>
	<bean name="excelAction" class="com.guanhuodata.excel.action.ExcelAction">
	</bean>
	
	<!-- jdbc config -->
	<bean id="propertyConfigure"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>jdbc.properties</value>
		</property>
	</bean>
	<!-- <bean id="dataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName">
			<value>NONXADBMS</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="poolSize">
			<value>5</value>
		</property>
		<property name="borrowConnectionTimeout">
			<value>60</value>
		</property>
		<property name="testQuery">
			<value>select 1</value>
		</property>
	</bean> -->
	<!--<bean id="aaalogDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url">
			<value>${aaalog.jdbc.url}</value>
		</property>
		<property name="driverClassName">
			<value>${aaalog.jdbc.driverClassName}</value>
		</property>
		<property name="username">
			<value>${aaalog.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${aaalog.jdbc.password}</value>
		</property>
	</bean>
	
	<bean id="an_aaalogDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url">
			<value>${an_aaalog.jdbc.url}</value>
		</property>
		<property name="driverClassName">
			<value>${an_aaalog.jdbc.driverClassName}</value>
		</property>
		<property name="username">
			<value>${an_aaalog.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${an_aaalog.jdbc.password}</value>
		</property>
	</bean>
	JNDI 配置数据库 ，tt与solid配置只需要将 jndiName 的value值进行修改即可
	<bean  id="dataSource1" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property  name="jndiName" value="java:/comp/env/jdbc/timesten1" />
	</bean>
	<bean  id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property  name="jndiName" value="java:/comp/env/jdbc/dataSource2" />
	</bean>
	<bean id="dBUtil" class="com.capitek.framework.util.DbUtil" init-method="init">
	</bean>
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	-->

	<!-- <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout">
			<value>300</value>
		</property>
	</bean> -->
	<!-- <bean id="springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">

		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="sqlmapper/*.xml" />
	</bean>
	
	<bean id="sqlSessionFactory_aaalog" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="aaalogDataSource" />
		<property name="mapperLocations" value="sqlmapper/*.xml" />
	</bean>
	
	<bean id="sqlSessionFactory_an_aaalog" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="an_aaalogDataSource" />
		<property name="mapperLocations" value="sqlmapper/*.xml" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="springTransactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="stutdown*" propagation="REQUIRED"/>
			<tx:method name="startup*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice> -->
	
	<bean id="ctomsLogger" class="com.guanhuodata.framework.log.CtomsLoger">
		<!-- <property name="isActionLogger" value="${isActionLogger}"/>
		<property name="ctomsLogDao" ref="ctomsLogDao"/> -->
	</bean>

	<bean id="ctomsLogDao" class="com.guanhuodata.framework.log.loggerTool.CTOMSLogDAO">
		<!-- <property name="dataSource" ref="dataSource"/> -->
	</bean>
	<bean id="driverTypeUtil" class="com.guanhuodata.framework.util.DriverTypeUtil">
		<!-- <property name="filePath" value="${driverType.path}"/> -->
	</bean>
	<!-- add omclog  
	<aop:config>
		<aop:pointcut id="loggableCalls" 
			expression="execution(* com.capitek.*.*Service.*(..)) 			    
				and !execution(* com.capitek.*.*.*Service.*(..))"/>

		<aop:pointcut id="right" 
			expression="execution(*  com.capitek.*.*.*Manager.*(..)) and !execution(* com.capitek.*.*Manager.*(..))"/>
		 
		<aop:aspect id="logAspect" ref="ctomsLogger">
   			<aop:around pointcut-ref="loggableCalls" method="aroundLogCalls"/>
   			<aop:around pointcut-ref="right" method="aroundLogCalls"/>
  		</aop:aspect> 
	</aop:config>
	<bean id="ctomsLogger" class="com.capitek.framework.log.CtomsLoger">-->
		<!--   <property name="logManageService">
			<ref bean="logManageService"/>
		</property>
		<property name="omcRescDao">
			<ref bean="omcrescDao" />
		</property>
		<property name="roleDao">
			<ref bean="omcroleDao" />
		</property>	
	</bean>	-->
	
</beans>